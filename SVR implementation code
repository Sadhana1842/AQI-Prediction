#This code implements SVR on the dataset for prediction.

"""Performing SVR  on the dataset.
For preprocessing, fill the null values in each column with the mean value of the respective column.
This version includes all the features.
The outliers were not removed."""

import pandas as pd
import io
from google.colab import files
uploaded=files.upload()
df=pd.read_csv(io.BytesIO(uploaded["AQI_DATASET.csv"]))
print(df)

import seaborn as sns
X= df.drop(['City','AQI_Bucket','AQI','Date'], axis= 1)
y= df['AQI']
sns.boxplot(data=X)

for column in X.columns:
  X[column]=X[column].fillna(X[column].mean())
print(X)

y=y.fillna(y.mean())
import seaborn as sns
sns.boxplot(data=X)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20,random_state=0)
from sklearn.preprocessing import StandardScaler
Scaler = StandardScaler()

scaled_X_train = Scaler.fit_transform(X_train)
scaled_X_test = Scaler.transform(X_test)

from sklearn.model_selection import GridSearchCV
from sklearn.svm import SVR
param_grid = {'C':[0.001,0.01,0.1,0.5,1],
             'kernel':['linear','rbf','poly'],
              'gamma':['scale','auto'],
              'degree':[2,3,4],
              'epsilon':[0,0.01,0.1,0.5,1,2]}

              
from sklearn.model_selection import GridSearchCV
svr = SVR()
grid = GridSearchCV(svr,param_grid=param_grid)
grid.fit(scaled_X_train,y_train)
best_parameters = grid.best_params_
best_accuracy = grid.best_score_

print('Best Parameters after tuning: {}'.format(best_parameters))
print('Best Accuracy after tuning: {}'.format(best_accuracy))


